% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/training.R
\name{training}
\alias{training}
\title{Estimate an Agent Model}
\usage{
training(trainData, features, Formula, k, sampling = FALSE,
  sampling_size = 1000, outcome_var_name = "action",
  package = c("caretglm", "caretglmnet", "glm", "caretnnet", "caretdnn"),
  tune_length = 10, parallel = FALSE, cv_type = c("cv", "repeatedcv"))
}
\arguments{
\item{trainData}{\code{data.frame} with each row (obervational unit) being an
individual agent decision. With a column called "group" specifying which
group of \code{agg_patterns} each obseravtion is in.}

\item{features}{\code{list} of the variables (columns in \code{data}) to be
used in the prediction \code{Formula}. As many elements in the \code{list}
as we want discrete models for different times. Each element of the
\code{list} is a \code{character vector}, with each element of the
\code{character vector} being a feature to use for training an
individual-level model.}

\item{Formula}{\code{list} where each element is a length one character vector
that specifies a formula, e.g. \code{y ~ x}. The character vector makes
sense in the context of the \code{features} and \code{data}. There are as
many elements in the list as there are discrete models for different times.}

\item{k}{numeric vector length one specifying the number of models for
different times.}

\item{sampling}{optional logical vector length one, default is \code{FALSE}.
If \code{sampling == TRUE}, we sample equal numbers of observations from
each 'group' to reduce potential problems with the final estimated model
being too affected by groups with more observations.}

\item{sampling_size}{optional numeric vector length one specifying how many
observations from each group that \code{\link{training}} should sample to
train the model, default is 1000. Only applicable when \code{sampling}
argument is set to \code{TRUE}.}

\item{outcome_var_name}{optional character vector length one, default is
\code{"action"}. \code{\link{training}} uses it to sample to train the model
with a balanced sampling based on \code{outcome_var_name}. Only applicable
when \code{sampling} argument is set to \code{TRUE}.}

\item{package}{optional character vector length one, default is
\code{"caretglm", "caretglmnet", "glm", "caretnnet", "caretdnn"}.}

\item{tune_length}{optional numeric vector length one specifying how many rows
for caret::train to create in design matrix of hyper-parameter sets.}

\item{parallel}{optional logical vector length one, default is \code{FALSE}.
Uses \code{doParallel::registerDoParallel()}. Should be \code{FALSE} when
training() is being called from inside cv_abm(), which, by default, is
already running in parallel.}

\item{cv_type}{optional character vector length one, default is \code{c("cv",
"repeatedcv")}. Passed on to \code{caret::trainControl()}.}
}
\value{
Returns a \code{list} length \code{k} where each element of the list
 is an estimated model (estimated agent decision function).
}
\description{
\code{training} uses a \code{caret::train} or \code{stats::glm} algorithm to
estimate an individual-level model and return a list where each element is
either a list of with element of class "train" (if \code{caret::train} was
used) or a list with each element of class "glm" if  (if \code{stat::glm} was
used).
}

